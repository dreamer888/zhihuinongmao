<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="GoodsMapper">

	<!--表名 -->
	<sql id="tableName">
		shop_goods
	</sql>

	<sql id="categorytableName">
		shop_category
	</sql>

	<!-- 字段 -->
	<sql id="Field">
		goods_pic,
		goods_name,
		goods_title,
		goods_price,
		goods_detail,
		category_id,
		goods_id,
		sort,
		tuijian,
		goods_num,
		sell_count,
		production_place,
		effective_date,
		pack,
		storage_condition
	</sql>

	<!-- 字段值 -->
	<sql id="FieldValue">
		#{goods_pic},
		#{goods_name},
		#{goods_title},
		#{goods_price},
		#{goods_detail},
		#{category_id},
		#{goods_id},
		#{sort},
		#{tuijian},
		#{goods_num},
		#{sell_count},
		#{production_place},
		#{effective_date},
		#{pack},
		#{storage_condition}
	</sql>

	<!-- 新增 -->
	<insert id="save" parameterType="pd">
		insert into
		<include refid="tableName"></include>
		(
		<include refid="Field"></include>
		) values (
		<include refid="FieldValue"></include>
		)
	</insert>

	<!-- 删除 -->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where
		goods_id = #{goods_id}
	</delete>

	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select
		t1.goods_id,
		t1.goods_pic,
		t1.goods_name,
		t1.goods_title,
		t1.goods_price,
		t1.goods_detail,
		t1.category_id,
		t1.sort,
		tuijian,
		reason_return,
		goods_num,
		sell_count,
		production_place,
		effective_date,
		pack,
		storage_condition
		from
		shop_goods t1
		where
		goods_id = #{goods_id}
	</select>

	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		t1.goods_pic,
		t1.goods_name,
		t1.goods_title,
		t1.goods_price,
		t1.goods_detail,
		t1.category_id,
		t1.goods_id,
		t1.sell_count,
		IFNULL(cc,0) comment_count,IFNULL(cr,0) comment_rate
		from
		shop_goods t1 left join (SELECT goods_id, COUNT(1) cc
		,round(avg(COMMENT_TITLE)/5*100) cr from shop_comment GROUP BY
		goods_id)t2
		on t1.goods_id=t2.goods_id
		where 1=1
		<!-- 子分类搜索 -->
		<if test="pd.category_id!= null and pd.category_id!= ''">
			and t1.category_id = #{pd.category_id}
		</if>
		<!-- 主分类搜索 -->
		<if test="pd.category_id== null or pd.category_id== ''">
			<if test="pd.super_id!= null and pd.super_id!= '0'.toString()">
				and t1.category_id in (select category_id from shop_category where
				super_id =#{pd.super_id})
			</if>
		</if>
		<!-- 商品名搜索 -->
		<if test="pd.goods_name!= null and pd.goods_name!= ''">
			and
			goods_name like concat(concat('%',
			#{pd.goods_name}),'%')
		</if>


		<!-- 推荐商品 -->
		<if test="pd.tuijian != null and pd.tuijian != ''">
			and t1.tuijian = #{pd.tuijian}
		</if>
		order by
		<!-- 商品推荐排序 -->
		<if test="pd.gtui ==1">
			tuijian desc,
		</if>

		<!-- 商品价格正序 -->
		<if test="pd.gprice ==1">
			goods_price,
		</if>
		<!-- 商品价格倒序 -->
		<if test="pd.gprice ==2">
			goods_price desc,
		</if>
		<!-- 商品销量正序 -->
		<if test="pd.gsales==1">
			goods_sales ,
		</if>
		<!-- 商品销量倒序 -->
		<if test="pd.gsales==2">
			goods_sales desc,
		</if>
		goods_id
	</select>
    
    <!-- 列表(单个菜市场) -->
    <select id="datalistSpecialMarketPage" parameterType="page" resultType="pd">
        select
	        t1.market_id,
	        t1.avg_price,
	        t1.attr_min_price,
	        t1.goods_pic,
	        t1.goods_name,
	        t1.goods_title,
	        t1.goods_price,
	        t1.goods_detail,
	        t1.category_id,
	        t1.goods_id,
	        t1.sell_count,
	        IFNULL(cc,0) comment_count,IFNULL(cr,0) comment_rate
        from
        v_market_shop_goods t1 left join (SELECT goods_id, COUNT(1) cc
        ,round(avg(COMMENT_TITLE)/5*100) cr from shop_comment GROUP BY
        goods_id)t2
        on t1.goods_id=t2.goods_id
        where 1=1
        <if test="pd.market_id!= null and pd.market_id!= ''">
            and t1.market_id = #{pd.market_id}
        </if>
        <!-- 子分类搜索 -->
        <if test="pd.category_id!= null and pd.category_id!= ''">
            and t1.category_id = #{pd.category_id}
        </if>
        <!-- 主分类搜索 -->
        <if test="pd.category_id== null or pd.category_id== ''">
            <if test="pd.super_id!= null and pd.super_id!= '0'.toString()">
                and t1.category_id in (select category_id from shop_category where
                super_id =#{pd.super_id})
            </if>
        </if>
        <!-- 商品名搜索 -->
        <if test="pd.goods_name!= null and pd.goods_name!= ''">
            and
            goods_name like concat(concat('%',
            #{pd.goods_name}),'%')
        </if>


        <!-- 推荐商品 -->
        <if test="pd.tuijian != null and pd.tuijian != ''">
            and t1.tuijian = #{pd.tuijian}
        </if>
        GROUP BY t1.goods_id 
        order by
        <!-- 商品推荐排序 -->
        <if test="pd.gtui ==1">
            tuijian desc,
        </if>

        <!-- 商品价格正序 -->
        <if test="pd.gprice ==1">
            avg_price,
        </if>
        <!-- 商品价格倒序 -->
        <if test="pd.gprice ==2">
            avg_price desc,
        </if>
        <!-- 商品销量正序 -->
        <if test="pd.gsales==1">
            sell_count ,
        </if>
        <!-- 商品销量倒序 -->
        <if test="pd.gsales==2">
            sell_count desc,
        </if>
        goods_id
    </select>
    
    <!-- 列表(单个菜市场全部) -->
    <select id="listSpecialMarketAll" parameterType="pd" resultType="pd">
        select
			t1.market_id,
			t1.avg_price,
			t1.attr_min_price,
			t1.goods_id,
			t1.goods_pic,
			t1.goods_name,
			t1.goods_title,
			t1.goods_price,
			t1.goods_num,
			t1.spec_name,
			t1.spec_title,
			t1.spec_price,
			t1.goods_detail,
			t1.goods_sales,
			t1.sort,
			t1.category_id,
			t1.tuijian,
			t1.reason_return,
			t1.sell_count
        from
            v_market_shop_goods
        t1
        where 1=1
        <if test="market_id!= null and market_id!= ''">
            and t1.market_id = #{market_id}
        </if>
        <if test="category_id!= null and category_id!= ''">
            and t1.category_id = #{category_id}
        </if>
        <if test="category_id!= null and category_id!= ''">
            and t1.category_id = #{category_id}
        </if>
        <if test="category_id== null or category_id== ''">
            <if test="super_id!= null and super_id!= '0'.toString()">
                and t1.category_id in (select category_id from shop_category where
                super_id =#{super_id})
            </if>
        </if>
        <if test="goods_name!= null and goods_name!= ''">
            and
            goods_name like concat('%', #{goods_name},'%')
        </if>
        <if test="tuijian != null and tuijian != ''">
            and t1.tuijian = #{tuijian}
        </if>
          <if test="goods_id != null and goods_id != ''">
            and t1.goods_id = #{goods_id}
        </if>
    </select>
    
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		t1.goods_pic,
		t1.goods_name,
		t1.goods_title,
		t1.goods_price,
		t1.goods_detail,
		t1.category_id,
		t1.goods_id,
		t1.sell_count
		from
		<include refid="tableName"></include>
		t1
		where 1=1
		<if test="category_id!= null and category_id!= ''">
			and t1.category_id = #{pd.category_id}
		</if>
		<if test="category_id== null or category_id== ''">
			<if test="super_id!= null and super_id!= '0'.toString()">
				and t1.category_id in (select category_id from shop_category where
				super_id =#{pd.super_id})
			</if>
		</if>
		<if test="goods_name!= null and goods_name!= ''">
			and
			goods_name like concat('%', #{goods_name},'%')
		</if>
		<if test="tuijian != null and tuijian != ''">
			and t1.tuijian = #{tuijian}
		</if>
	</select>

	<!-- 批量修改 -->
	<update id="goodssellcount" parameterType="String">
		update shop_goods
		<trim prefix="set" suffixOverrides="">
			<trim prefix="sell_count = case goods_id" suffix="end">
				<foreach collection="list" item="detail_list" index="index"
					open="" separator="" close="">
					when #{detail_list.goods_id} then sell_count +
					#{detail_list.goods_count}
				</foreach>
			</trim>
		</trim>
		where goods_id in
		<foreach collection="list" item="detail_list" index="index"
			open="(" separator="," close=")">
			#{detail_list.goods_id}
		</foreach>
	</update>

	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where
		goods_id in
		<foreach item="item" index="index" collection="array" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</delete>
    
    <select id="getCurrentStock" parameterType="com.wqwy.zhnm.base.component.dto.GoodsDTO" resultType="com.wqwy.zhnm.base.component.dto.GoodsDTO">
		SELECT 
		    sg.market_id marketId,
	        sg.goods_id goodsId,
	        SUM(sg.current_stock) currentStock
		FROM 
			seller_goods sg 
			LEFT JOIN seller s ON sg.seller_id=s.id
		WHERE 1=1 
			AND sg.goods_id = #{goodsId} 
			AND sg.market_id = #{marketId}  
			AND sg.status = 0 
        GROUP BY sg.goods_id
	</select>
	

</mapper>